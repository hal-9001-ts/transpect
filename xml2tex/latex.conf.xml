<?xml-model href="http://transpect.io/xml2tex/schema/xml2tex.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://transpect.io/xml2tex/schema/xml2tex.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<set xmlns="http://transpect.io/xml2tex" 
     xmlns:xml2tex="http://transpect.io/xml2tex" 
     xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  
  <xsl:import href="http://transpect.io/xslt-util/functx/Sequences/Sorting-and-Grouping/sort.xsl"/>
  
  <xsl:variable name="is-collection" select="matches($basename,  'ts\\_[a-z]{3}\\_anth\\_')" as="xs:boolean"/>

  <xsl:variable name="title" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Titel']" as="element(dbk:keyword)?"/>
  <xsl:variable name="subtitle" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Untertitel']" as="element(dbk:keyword)?"/>
  <xsl:variable name="editors" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Herausgeber']" as="element(dbk:keyword)*"/>
  <xsl:variable name="authors" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Autor']" as="element(dbk:keyword)*"/>
  <xsl:variable name="edition" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Reihe']" as="element(dbk:keyword)*"/>
  <xsl:variable name="volumenum" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Bandnummer']" as="element(dbk:keyword)*"/>
  
  <xsl:variable name="print-isbn" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Print-ISBN']" as="element(dbk:keyword)?"/>
  <xsl:variable name="pdf-isbn" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'PDF-ISBN']" as="element(dbk:keyword)?"/>
  <xsl:variable name="epub-isbn" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'ePUB-ISBN']" as="element(dbk:keyword)?"/>
  
  <!--<xsl:variable name="contribs" select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Umschlaggestaltung'],
                                        /dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Umschlagcredit'],
                                        /dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Druck']" as="element(dbk:keyword)*"/>-->
  <xsl:variable name="copyright-holder" as="xs:string?"
                select="replace(tokenize(/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Copyright'], ',')[1],
                                '^.*?\d{4}(.*?)$', 
                                '$1')"/>
  <xsl:variable name="copyright-place" as="xs:string?" 
    select="tokenize(/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Copyright'], ',')[1]"/>
  <xsl:variable name="copyright-year" 
                select="replace(/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Copyright'], '^.*?(\d{4}).*?$', '$1')" as="xs:string?"/>
  <xsl:variable name="dedication" as="xs:string?"
                select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Widmung']"/>
  
  <xsl:variable name="series-logo" as="xs:string?" 
                select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Reihenlogo']"/>
  <xsl:variable name="editorial" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Editorial']"/>
  <xsl:variable name="author-info" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Autoreninformationen']"/>
  <xsl:variable name="website" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'transcript-Website']"/>
  <xsl:variable name="thanksto" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Dank']"/>
  <xsl:variable name="biblio-info" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Bibliografische Information']"/>
  <xsl:variable name="license-logo" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Lizenzlogo']"/>
  <xsl:variable name="license-text" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Lizenztext']"/>
  <xsl:variable name="cover-art" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Umschlaggestaltung']"/>
  <xsl:variable name="cover-credit" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Umschlagcredit']"/>
  <xsl:variable name="copy-editing" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Korrektorat']"/>
  <xsl:variable name="typesetter" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Setzer']"/>
  <xsl:variable name="print" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Druck']"/>
  <xsl:variable name="lectorate" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Lektorat']"/>
  <xsl:variable name="translator" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Übersetzer']"/>
  <xsl:variable name="grantlogo" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Förderlogo']"/>
  <xsl:variable name="granttext" as="xs:string?" 
    select="/dbk:hub/dbk:info/dbk:keywordset[@role eq 'titlepage']/dbk:keyword[@role eq 'Fördertext']"/>
  
  <ns prefix="dc" uri="http://purl.org/dc/elements/1.1/"/>
  <ns prefix="rdf" uri="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
  
  <import href="../../common/xml2tex/latex.conf.xml"/>  
  
  <preamble>%
    % by transcript publishers
    %
    <xsl:value-of select="concat('\documentclass[',
                                 string-join(($babel-langs[position() ne 1],
                                              $babel-langs[1]), (: 1st lang is main lang and comes last :)
                                 ','),
                                 ',',
                                 if($is-collection) then 'collection' else 'book',
                                 ',lay=',
                                 lower-case($layout),
                                      if($notes-type eq 'endnotes' and $endnotes-with-chapter eq 'yes')  then ',endnotesperchapter'
                                 else if($notes-type eq 'endnotes')                                      then ',endnotes'
                                 else (),
                                 if($notes-type eq 'endnotes' and $notes-per-chapter-notoc eq 'yes') then ',ennotoc' else (),
                                 for $i in $other-scripts-in-doc
                                 return concat(',usescript=', $i),
                                 ']{transcript}&#xa;')"/>
    \definecolor{color-1}{rgb}{0,0,0}
    \definecolor{color-2}{rgb}{0.85,0.85,0.85}
    <xsl:for-each select="xml2tex:rgb-to-tex-color( $colors )">
      <xsl:if test="not(matches(., 'color-(1|2)'))">        
        <xsl:value-of select="concat('\define', ., '&#xa;')"/>
      </xsl:if>
    </xsl:for-each>
    <xsl:if test="$langs = 'zh'">
      <xsl:value-of select="'\usepackage{CJK}&#xa;'"/>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="/dbk:hub/dbk:part">
        <xsl:text>\haspartstrue&#xa;</xsl:text>
      </xsl:when>
      <xsl:otherwise>
        <xsl:text>\haspartsfalse&#xa;</xsl:text>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="$title-pages eq 'yes'">
      <xsl:value-of select="concat('&#xa;\title{', (normalize-space($title), 'Haupttitel')[1], '}&#xa;')"/>
      <xsl:if test="$subtitle">
        <xsl:value-of select="concat('&#xa;\subtitle{', normalize-space($subtitle), '}&#xa;')"/>
      </xsl:if>
      <xsl:for-each select="$editors">
        <xsl:value-of select="concat('&#xa;\editor{', normalize-space(.), '}&#xa;')"/>
      </xsl:for-each>
      <xsl:for-each select="$authors">
        <xsl:value-of select="concat('&#xa;\authorinfo{', normalize-space(dbk:personname/dbk:othername), '}',
                                     if(dbk:personblurb) then concat('{', dbk:personblurb, '}') else '',
                                     '&#xa;')"/>
      </xsl:for-each>
      <xsl:if test="$abstract">
        <xsl:text>&#xa;\editorial{</xsl:text>
        <xsl:apply-templates select="$abstract" mode="#current"/>
        <xsl:text>}&#xa;</xsl:text>
      </xsl:if>
      <xsl:if test="$edition">
        <xsl:value-of select="concat('&#xa;\edition{', normalize-space($edition), '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$print-isbn">
        <xsl:value-of select="concat('&#xa;\isbn{', $print-isbn, '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$pdf-isbn">
        <xsl:value-of select="concat('&#xa;\eisbn{', $pdf-isbn, '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$epub-isbn">
        <xsl:value-of select="concat('&#xa;\epubisbn{', $epub-isbn, '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$copyright-holder">
        <xsl:value-of select="concat('&#xa;\publ{', tokenize(normalize-space($copyright-holder), ',')[1], '}&#xa;')"/>
        <xsl:value-of select="concat('&#xa;\place{', tokenize(normalize-space($copyright-holder), ',')[2], '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$copyright-year">
        <xsl:value-of select="concat('&#xa;\publyear{', normalize-space($copyright-year), '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$license-text">
        <xsl:value-of select="concat('&#xa;\cctext{', normalize-space($license-text), '}&#xa;')"/>
      </xsl:if>
      <!-- path is not defined yet
        <xsl:if test="$license-logo">
        <xsl:value-of select="concat('&#xa;\ccimage{', normalize-space($license-logo), '}&#xa;')"/>
      </xsl:if>-->
      <xsl:if test="$cover-art">
        <xsl:value-of select="concat('&#xa;\coverDesign{', normalize-space($cover-art), '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$cover-credit">
        <xsl:value-of select="concat('&#xa;\coverimage{', normalize-space($cover-credit), '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$print">
        <xsl:value-of select="concat('&#xa;\print{', normalize-space($print), '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$typesetter">
        <xsl:value-of select="concat('&#xa;\typesetter{', normalize-space($typesetter), '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$copy-editing">
        <xsl:value-of select="concat('&#xa;\QandA{', normalize-space($copy-editing), '}&#xa;')"/>
      </xsl:if>
      <!--<xsl:for-each select="$contribs">
        <xsl:value-of select="concat('&#xa;\', @role, '{', normalize-space(.), '}&#xa;')"/>
      </xsl:for-each>-->
      <xsl:if test="$funder">
        <xsl:value-of select="concat('&#xa;\thanks{', normalize-space($funder), '}&#xa;')"/>
      </xsl:if>
      <xsl:if test="$dedication">
        <xsl:value-of select="concat('&#xa;\begin{dedication}&#xa;', normalize-space($dedication), '\end{dedication}&#xa;')"/>
      </xsl:if>
    </xsl:if>
    <!-- global part/chapter/section numbering -->
    <!--<xsl:value-of select="concat('\setcounter{secnumdepth}{', 
           if(//dbk:part[1]/dbk:info/dbk:title[matches(@role, '^tsheadingenumerated\d$')])                              then '-2'
      else if(//dbk:chapter[1]/dbk:info/dbk:title[matches(@role, '^tsheadingenumerated\d$')])                           then '-1'
      else if(//dbk:section[count(ancestor::dbk:section) eq 0][1]/dbk:info/dbk:title[matches(@role, '^tsheadingenumerated\d$')]) then  '1'
      else if(//dbk:section[count(ancestor::dbk:section) eq 1][1]/dbk:info/dbk:title[matches(@role, '^tsheadingenumerated\d$')]) then  '2'
      else if(//dbk:section[count(ancestor::dbk:section) gt 1][1]/dbk:info/dbk:title[matches(@role, '^tsheadingenumerated\d$')]) then  '3'
      else                                                                                                                    '0'
      , '}&#xa;')"/>-->
    
  </preamble>
  
  <front>
    <xsl:if test="$title-pages eq 'yes'">
      <xsl:text>\maketitle&#xa;</xsl:text>
    </xsl:if>
    <xsl:value-of select="'\setcounter{secnumdepth}{-1}&#xa;'"/>
    <xsl:value-of select="concat('\setcounter{tocdepth}{', 
                                   if(//dbk:part) 
                                   then xs:string(xs:integer($toc-depth) - 2)
                                   else xs:string(xs:integer($toc-depth) - 1),
                                   '}&#xa;')"/>
    <xsl:text>\tableofcontents&#xa;</xsl:text>
  </front>
  
  <template context="dbk:dedication[@role eq 'tsded']">
    <rule name="wid" type="env"  break-after="1" break-before="1">
      <param/>
    </rule>
  </template>
  
</set>
